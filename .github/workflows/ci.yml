name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
  workflow_dispatch:

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pipx run build --sdist
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build_wheel:
    name: Build wheels for ${{ matrix.os }} ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-13
            target: x86_64
          - os: macos-14
            target: arm64
          - os: ubuntu-latest
            target: x86_64
          - os: ubuntu-latest
            target: i686
          - os: windows-latest
            target: amd64
          - os: windows-latest
            target: win32
    env:
      CIBW_BUILD: "*${{ matrix.target }}"
      CIBW_SKIP: pp* *-musllinux*
      CIBW_BEFORE_ALL_LINUX: curl -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
      CIBW_ENVIRONMENT_LINUX: "PATH=$HOME/.cargo/bin:$PATH"
      CIBW_TEST_COMMAND: "python -m ruff_api.tests && python -m mypy -p ruff_api"
      CIBW_TEST_EXTRAS: "dev"
    steps:
      - uses: actions/checkout@v4
      - uses: pypa/cibuildwheel@v2.20
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  test:
    name: Test
    needs: [build_sdist, build_wheel]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
        os: [macOS-latest, ubuntu-latest, windows-latest]
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v4
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          # cache: pip
          # cache-dependency-path: |
          #   **/pyproject.toml
          #   **/requirements*.txt
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - name: Install
        run: |
          python -m pip install --upgrade pip
          python -m pip install --only-binary ruff-api --no-index --find-links dist/ "ruff-api"
          python -m pip install "ruff-api[dev]"
      - name: Test
        run: |
          python -m ruff_api.tests
          python -m mypy -p ruff_api

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          cache: pip
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - name: Install
        run: |
          python -m pip install --upgrade pip
          make install
      - name: Lint
        run: make lint

  upload:
    name: Publish
    runs-on: ubuntu-latest
    needs: [build_sdist, build_wheel, test, lint]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true
      - uses: pypa/gh-action-pypi-publish@release/v1
