name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  sdist:
    name: sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  build:
    name: build ${{ matrix.target.os }} ${{ matrix.target.arch }}
    runs-on: ${{ matrix.target.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            arch: aarch64
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          - os: windows-latest
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          allow-prereleases: true
      - name: Build wheel
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target.arch }}
          args: --release --out dist --interpreter '3.8 3.9 3.10 3.11 3.12 3.13'
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          allow-prereleases: true
      - name: Install
        run: make install
      - name: Test
        run: make test
      - name: Lint
        run: make lint

  test:
    name: test
    needs: [build]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true
      - uses: actions/download-artifact@v3
        with:
          name: wheels
          path: dist
      - name: Install
        run: |
          pip install --upgrade pip
          pip install --no-index --find-links dist/ --only-binary ruff-api ruff-api
          pip install ruff-api[dev]
      - name: Test
        run: |
          python -m ruff_api.tests
          python -m mypy -p ruff_api

  publish:
    name: publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build, lint, test, sdist]
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --non-interactive --skip-existing *
